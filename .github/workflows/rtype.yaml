name: RType

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-CPP-500-NAN-5-1-rtype-thomas.cluseau.git"
  EXECUTABLES: "./bin/r-type_server, ./bin/r-type_client"

jobs:
  check_fedora_program_compilation:

    runs-on: ubuntu-latest

    container:
      image: fedora:latest
    # container:
    #   image: ghcr.io/ClementBaziret/custom-epitest:latest
    #   credentials:
    #       username: ClementBaziret
    #       password: ${{ secrets.GIT_AUTH_TOKEN }}

    steps:
      - name: Checkout fetch
        uses: actions/checkout@v4
      # - name: Create build directory
      #   run: mkdir build
      - name: Update Fedora
        run:  dnf update -y
      - name: Install necessary dependencies
        run:  dnf install -y          \
              g++                     \
              git                     \
              tree                    \
              cmake                   \
              mesa-libGL-devel        \
              mesa-libGLU-devel       \
              openal-soft-devel       \
              libgudev-devel          \
              flac-devel              \
              libvorbis-devel         \
              freetype-devel          \
              libX11-devel            \
              libXcursor-devel        \
              libXrandr-devel
      - name: Compilation
        uses: actions/checkout@v4
      # - name: Init CMake
      #   run: cd build/ && cmake ..
      # - name: Compilation
      #   timeout-minutes: 3
      #   run: cmake --build ./build/ --target all
      - name: check execs
        run: |
          for executables in $(echo "${{ env.EXECUTABLES }}" | tr ',' ' '); do
            if [ ! -x "${executables}" ]; then
              echo "Executable ${executables} doesn't exist or isn't excutable."
              exit 1
            fi
          done

  ## PLEASE ADD SOME UNITS TESTS !

  # run_tests:
  #   needs: [check_program_compilation]

  #   runs-on: ubuntu-latest

  #   container:
  #     image: epitechcontent/epitest-docker

  #   steps:
  #     - name: Checkout fetch
  #       uses: actions/checkout@v4
  #     - name: make tests_run
  #       timeout-minutes: 2
  #       run: make tests_run

  push_to_mirror:
    needs: [check_fedora_program_compilation]

    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Checkout fetch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL}}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}